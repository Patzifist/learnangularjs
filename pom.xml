<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.thoughtworks.learn</groupId>
    <artifactId>learnangularjs</artifactId>
    <packaging>war</packaging>
    <version>1.0.0</version>
    <name>Learn AngularJS</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.6</java.version>

        <cglib.version>2.2.2</cglib.version>
        <commons-lang.version>2.6</commons-lang.version>
        <guava.version>13.0.1</guava.version>
        <hamcrest.version>1.3</hamcrest.version>
        <jackson.version>1.9.9</jackson.version>
        <joda-time.version>2.1</joda-time.version>
        <junit.version>4.10</junit.version>
        <servlet-api.version>3.0.1</servlet-api.version>
        <slf4j.version>1.7.0</slf4j.version>
        <spring.version>3.1.2.RELEASE</spring.version>
        <spring-security.version>3.1.2.RELEASE</spring-security.version>
        <tomcat.version>7.0.30</tomcat.version>

        <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
        <maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
        <maven-war-plugin.version>2.2</maven-war-plugin.version>
        <tomcat7-maven-plugin.version>2.0-beta-1</tomcat7-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>

        <dependency>
            <!--Use logback rather than slf4j-simple for a 'real' application-->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-logging-log4j</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat7-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>start-tomcat</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- http://tomcat.apache.org/maven-plugin-2.0-beta-1/tomcat7-maven-plugin/run-mojo.html -->
                            <fork>true</fork>
                            <ignorePackaging>true</ignorePackaging>
                            <path>/</path>
                            <port>8000</port>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-tomcat</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>shutdown</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-executable-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec-war-only</goal>
                        </goals>
                        <configuration>
                            <!-- http://tomcat.apache.org/maven-plugin-2/executable-war-jar.html -->
                            <path>/</path>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>jshint</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- https://github.com/philmander/ant-jshint -->
                            <target>
                                <echo message="-------------------------------------------"/>
                                <echo message=" J S  H I N T                              "/>
                                <echo message="-------------------------------------------"/>
                                <taskdef name="jshint" classname="com.philmander.jshint.JsHintAntTask"
                                         classpath="${project.basedir}/build/ant-jshint-0.3.1.jar"/>
                                <jshint dir="${project.basedir}/src/main/webapp/js"
                                        globals="jQuery=true, angular=true, $=true"
                                        optionsFile="build/jshint-options.properties">
                                    <include name="app/**/*.js"/>
                                    <exclude name="lib/**/*.js"/>
                                    <report type="xml" destFile="${project.build.directory}/jshint-report.xml"/>
                                </jshint>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jstd-unit-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- Download JS Test Driver from http://code.google.com/p/js-test-driver/downloads/list?can=1 -->
                            <!-- Command line flags: http://code.google.com/p/js-test-driver/wiki/CommandLineFlags -->
                            <!-- Download PhantomJS from: http://phantomjs.org/download.html -->
                            <!-- Mac users: Install PhantomJS using homebrew -->
                            <target>
                                <echo message="-------------------------------------------"/>
                                <echo message=" J S  T E S T  D R I V E R  -  U N I T     "/>
                                <echo message="-------------------------------------------"/>
                                <java jar="build/jstestdriver-1.3.3d.jar" fork="true" failonerror="true" timeout="60000">
                                    <arg value="--browser"/>
                                    <arg value="phantomjs;build/phantomjs-jstd-bridge.js"/>
                                    <arg value="--captureConsole"/>
                                    <arg value="true"/>
                                    <arg value="--config"/>
                                    <arg value="unit.jstd"/>
                                    <arg value="--port"/>
                                    <arg value="9879"/>
                                    <arg value="--testOutput"/>
                                    <arg value="${project.build.directory}/jstd-unit-reports"/>
                                    <arg value="--tests"/>
                                    <arg value="all"/>
                                </java>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jstd-e2e-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="-------------------------------------------"/>
                                <echo message=" J S  T E S T  D R I V E R  -  E 2 E       "/>
                                <echo message="-------------------------------------------"/>
                                <java jar="build/jstestdriver-1.3.3d.jar" fork="true" failonerror="true" timeout="300000">
                                    <arg value="--browser"/>
                                    <arg value="phantomjs;build/phantomjs-jstd-bridge.js"/>
                                    <arg value="--captureConsole"/>
                                    <arg value="true"/>
                                    <arg value="--config"/>
                                    <arg value="e2e.jstd"/>
                                    <arg value="--port"/>
                                    <arg value="9880"/>
                                    <arg value="--testOutput"/>
                                    <arg value="${project.build.directory}/jstd-e2e-reports"/>
                                    <arg value="--tests"/>
                                    <arg value="all"/>
                                </java>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
